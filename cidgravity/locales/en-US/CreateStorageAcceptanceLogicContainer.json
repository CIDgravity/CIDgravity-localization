{
    "title": {
        "newDefault": "Create a default acceptance logic",
        "new": "Create a new acceptance logic",
        "edit": "Edit an acceptance logic"
    },
    "queryBuilder": {
        "valueLabel": "integer",
        "valuePlaceholder": "Enter integer",
        "fieldLabel": "Variable",
        "operatorLabel": "Operator",
        "funcLabel": "Arithmetic",
        "fieldPlaceholder": "Select a variable",
        "funcPlaceholder": "Select an arithmetic operation",
        "operatorPlaceholder": "Select an operator",
        "addGroupLabel": "Group",
        "addRuleLabel": "Rule",
        "addSubRuleLabel": "Rule",
        "notLabel": "Not",
        "fieldSourcesPopupTitle": "Select source",
        "valueSourcesPopupTitle": "Select value source",
        "advancedOperationSecondArgLabel": "Select integer, variable or arithmetic operation",
        "operators": {
            "between": {
                "label": "Between",
                "from": "from",
                "to": "to"
            }
        },
        "types": {
            "boolean": {
                "is": "is"
            }
        },
        "functions": {
            "sum": {
                "label": "Sum"
            },
            "minus": {
                "label": "Substraction"
            },
            "multiply": {
                "label": "Multiply"
            },
            "divide": {
                "label": "Divide"
            }
        },
        "fields": {
            "sectorStates": {
                "title": "Sealing pipeline - sector states",
                "tooltip": "Sealing pipeline - sector states",
                "values": {
                    "Packing": "Packing",
                    "WaitDeals": "WaitDeals",
                    "AddPiece": "AddPiece",
                    "PreCommit1": "PreCommit1",
                    "GetTicket": "GetTicket",
                    "PreCommit2": "PreCommit2",
                    "PreCommitting": "PreCommitting",
                    "PreCommitWait": "PreCommitWait",
                    "SubmitPreCommitBatch": "SubmitPreCommitBatch",
                    "PreCommitBatchWait": "PreCommitBatchWait",
                    "WaitSeed": "WaitSeed",
                    "Committing": "Committing",
                    "CommitFinalize": "CommitFinalize",
                    "SubmitCommit": "SubmitCommit",
                    "CommitWait": "CommitWait",
                    "SubmitCommitAggregate": "SubmitCommitAggregate",
                    "CommitAggregateWait": "CommitAggregateWait",
                    "FinalizeSector": "FinalizeSector",
                    "Proving": "Proving",
                    "FailedUnrecoverable": "FailedUnrecoverable",
                    "Available": "Available",
                    "DealsExpired": "DealsExpired",
                    "RecoverDealIDs": "RecoverDealIDs",
                    "Faulty": "Faulty",
                    "FaultReported": "FaultReported",
                    "FaultedFinal": "FaultedFinal",
                    "Terminating": "Terminating",
                    "TerminateWait": "TerminateWait",
                    "TerminateFinality": "TerminateFinality",
                    "Removing": "Removing",
                    "Removed": "Removed",
                    "SnapDealsWaitDeals": "SnapDealsWaitDeals",
                    "SnapDealsAddPiece": "SnapDealsAddPiece",
                    "SnapDealsPacking": "SnapDealsPacking",
                    "UpdateReplica": "UpdateReplica",
                    "ProveReplicaUpdate": "ProveReplicaUpdate",
                    "SubmitReplicaUpdate": "SubmitReplicaUpdate",
                    "WaitMutable": "WaitMutable",
                    "ReplicaUpdateWait": "ReplicaUpdateWait",
                    "UpdateActivating": "UpdateActivating",
                    "ReleaseSectorKey": "ReleaseSectorKey",
                    "FinalizeReplicaUpdate": "FinalizeReplicaUpdate",
                    "SnapDealsDealsExpired": "SnapDealsDealsExpired",
                    "SnapDealsRecoverDealIDs": "SnapDealsRecoverDealIDs",
                    "AbortUpgrade": "AbortUpgrade",
                    "ReceiveSector": "ReceiveSector"
                }
            },
            "additionalFields": {
                "title": "Others",
                "tooltip": "Others",
                "dayOfWeek": {
                    "monday": "Monday",
                    "tuesday": "Tuesday",
                    "wednesday": "Wednesday",
                    "thursday": "Thursday",
                    "friday": "Friday",
                    "saturday": "Saturday",
                    "sunday": "Sunday"
                },
                "values": {
                    "ReceivedOnTimeOfDayUTC": "Received on (time of the day UTC)",
                    "ReceivedOnDayOfWeek": "Received on (day of the week)"
                }
            },
            "sectorStatesErrors": {
                "title": "Sealing pipeline errors",
                "tooltip": "Sealing pipeline errors",
                "values": {
                    "AddPieceFailed": "AddPieceFailed",
                    "CommitFinalizeFailed": "CommitFinalizeFailed",
                    "SealPreCommit1Failed": "SealPreCommit1Failed",
                    "Any": "Any errors"
                }
            }
        }
    },
    "button": {
        "backToAcceptanceLogicList": "Go back to acceptance logics"
    },
    "validation": {
        "name": {
            "required": "Acceptance logic name is mandatory.",
            "matches": "Can only contain letters, numbers and underscore.",
            "alreadyUsed": "Acceptance logic name already exist, it must be unique."
        },
        "onCreateAcceptanceLogic": "Unable to create the acceptance logic, please try later or contact the CIDgravity team.",
        "onUpdateAcceptanceLogic": "Unable to update the acceptance logic, please try later or contact the CIDgravity team.",
        "builder": {
            "invalid": "Invalid acceptance logic, please verify all fields are set correctly.",
            "positiveNumberOnly": "Must be a positive integer.",
            "integerOnly": "Must be an integer."
        }
    },
    "notification": {
        "success": {
            "onCreateDefaultAcceptanceLogic": "Default acceptance logic successfully created.",
            "onCreateAcceptanceLogic": "Acceptance logic successfully created.",
            "onUpdateAcceptanceLogic": "Acceptance logic successfully updated."
        },
        "error": {
            "generic": "Unable to create or update the acceptance logic, please try later or contact the CIDgravity team.",
            "onImportInvalidJsonLogic": "Invalid Acceptance logic",
            "onImportInvalidVariablesNames": "Invalid acceptance logic, at least one variable have a wrong name format."
        }
    },
    "error": {
        "isAcceptanceLogicNotExistingOrNotAllowed": "Acceptance logic unavailable."
    }
}
