{
    "title": "Miner connectivity",
    "subtitle": "End to end connectivity check, validating the miner ability to receive storage deals, and CIDgravity connectivity.",
    "step": {
        "readyToLaunch": "Press the \"Launch tests\" button",
        "sendingProposal": "Sending test proposal…",
        "results": {
            "howToSolve": "Hint",
            "finishedSuccess": {
                "title": "All tests successfully passed",
                "description": "This miner is reachable and properly configured and to receive storage deals with CIDgravity."
            }
        },
        "checkingResults": "Waiting result ({{step}} / 6)…",
        "errorCodes": {
            "timeout": "An error occurred whilst trying to test the miner connectivity, please try again later or contact the CIDgravity team."
        }
    },
    "errorCode": {
        "ERR_NO_PEER_ID_SET_ON_CHAIN": {
            "name": "Peer ID set on chain {{peerId}}",
            "resolveTips": "No Peer ID found on chain. Use the following commands (given that boost init generates a new identity):",
            "resolveTipsCommand": "# Get the miner Peer ID\nPEER_ID=$(boostd net id)\n# Show Peer ID\necho \"$PEER_ID\"\n# Set the Peer ID on chain\nlotus-miner actor set-peer-id \"$PEER_ID\""
        },
        "ERR_NO_MULTI_ADDRESS_SET_ON_CHAIN": {
            "name": "Multiaddr set on chain {{multiaddresses}}",
            "resolveTips": "No Multi address found on chain. Follow these actions:\n1. Get the value of LibP2P ListenAddresses from boostd config.toml\n2. Set the Multiaddr on chain :",
            "resolveTipsCommand": "lotus-miner actor set-addrs \"<MULTIADDR>\""
        },
        "ERR_INVALID_MULTI_ADDRESS_IN_MINER_INFO": {
            "resolveTips": "Format is invalid, set the correct Multiaddr on chain following these actions:\n1. Get the value of LibP2P ListenAddresses from boostd config.toml\n2. Set the new Multiaddr on chain :",
            "name": "Verifying Multiaddr format",
            "resolveTipsCommand": "lotus-miner actor set-addrs \"<MULTIADDR>\""
        },
        "ERR_CONNECT_MINER_PEER_ID": {
            "name": "Testing miner Peer ID reachability",
            "resolveTips": "Cannot connect to miner.\n1. Verify miner libP2P port is publicly reachable.\n2. Set the correct Peer ID on chain using the following commands (given that boost init generates a new identity) :",
            "resolveTipsCommand": "# Get the miner Peer ID\nPEER_ID=$(boostd net id)\n# Show Peer ID\necho \"$PEER_ID\"\n# Set the Peer ID on chain\nlotus-miner actor set-peer-id \"$PEER_ID\""
        },
        "ERR_CIDGRAVITY_SIDE": {
            "name": "CIDgravity connectivity test service is unavailable",
            "resolveTips": "An error occurred whilst trying to test the miner connectivity, please try again later or contact the CIDgravity team.",
            "resolveTipsCommand": "N/A"
        },
        "ERR_DEAL_PROTOCOL_UNSUPPORTED": {
            "name": "Deal protocols supported {{dealProtocolsSupported}}",
            "resolveTips": "Cannot retrieve supported libp2p market protocols.\nConsider running the last stable version of boost or venus",
            "resolveTipsCommand": "N/A"
        },
        "ERR_NO_MATCHING_DEAL_PROTOCOL_SUPPORTED": {
            "name": "Verifying deal protocol compatibility",
            "resolveTips": "Unsupported libp2p market protocol.\nConsider running the last stable version of boost or venus",
            "resolveTipsCommand": "N/A"
        },
        "ERR_CIDGRAVITY_CONNECTOR_MISCONFIGURED": {
            "resolveTips": ""
        },
        "ERR_BUILDING_DEAL_PROPOSAL": {
            "name": "CIDgravity connectivity test service is unavailable"
        },
        "DIAGNOSIS_SUCCESS": {
            "name": "Completed"
        },
        "ERR_TIMEOUT": {
            "name": "CIDgravity connectivity test service is unavailable",
            "resolveTips": "An error occurred whilst trying to test the miner connectivity, please try again later or contact the CIDgravity team.",
            "resolveTipsCommand": "N/A"
        },
        "ERR_GET_ASK": {
            "name": "Retrieving miner storage ask",
            "resolveTips": "Cannot get miner get-ask info. Verify locally the pricing is properly set :",
            "resolveTipsCommand": "# Boost\nboost provider storage-ask \"{{minerID}}\""
        },
        "ERR_GET_ASK_PRICES_NOT_SET_TO_ZERO": {
            "name": "Validating storage pricing:\n• unverified price: {{getAskPricePerGib}}\n• verified price: {{getAskVerifiedPricePerGib}}",
            "resolveTips": "All prices must be set to 0 as pricing management is delegated and managed via CIDgravity.\nSet the prices in boost UI [Settings][Storage Ask]",
            "resolveTipsCommand": "N/A"
        },
        "ERR_GET_ASK_SIZES_NOT_PROPERLY_SET": {
            "name": "Validating storage piece size criterias :\n• min piece size: {{getAskMinPieceSize}}\n• max piece size: {{getAskMaxPieceSize}}",
            "resolveTips": "Piece sizes must be be set to 256B and {{getAskSectorSize}} as acceptance criterias are delegated and managed via CIDgravity.\nSet the prices in boost UI [Settings][Storage Ask]",
            "resolveTipsCommand": "N/A"
        },
        "ERR_SEND_PROPOSAL": {
            "name": "Sending a test deal proposal"
        }
    },
    "button": {
        "sendTest": "Launch tests"
    }
}
