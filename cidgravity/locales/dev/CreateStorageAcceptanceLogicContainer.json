{
    "title": {
        "newDefault": "Create your default acceptance logic",
        "new": "Create a new acceptance logic",
        "edit": "Edit an acceptance logic"
    },
    "queryBuilder": {
        "valueLabel": "value",
        "valuePlaceholder": "value",
        "fieldLabel": "Variable",
        "operatorLabel": "Operator",
        "funcLabel": "Advanced operations",
        "fieldPlaceholder": "Select variable",
        "funcPlaceholder": "Select advanced operation",
        "operatorPlaceholder": "Select operator",
        "addGroupLabel": "Create group",
        "addRuleLabel": "Create rule",
        "addSubRuleLabel": "Create sub rule",
        "notLabel": "Not",
        "fieldSourcesPopupTitle": "Select source",
        "valueSourcesPopupTitle": "Select value source",
        "advancedOperationSecondArgLabel": "Select number, variable or advanced operation",
        "operators": {
            "between": {
                "label": "Between",
                "from": "from",
                "to": "to"
            }
        },
        "types": {
            "boolean": {
                "is": "is"
            }
        },
        "functions": {
            "sum": {
                "label": "Sum"
            },
            "minus": {
                "label": "Substraction"
            },
            "multiply": {
                "label": "Multiply"
            },
            "divide": {
                "label": "Divide"
            }
        },
        "fields": {
            "sectorStates": {
                "title": "Sealing pipeline - sector states",
                "tooltip": "Sealing pipeline - sector states",
                "values": {
                    "WaitDeals": "WaitDeals",
                    "Packing": "Packing",
                    "AddPiece": "AP",
                    "AddPieceFailed": "AddPieceFailed",
                    "GetTicket": "GetTicket",
                    "PreCommit1": "PC1",
                    "PreCommit2": "PC2",
                    "PreCommitting": "PreCommitting",
                    "PreCommitWait": "PreCommitWait",
                    "SubmitPreCommitBatch": "SubmitPreCommitBatch",
                    "PreCommitBatchWait": "PreCommitBatchWait",
                    "WaitSeed": "WaitSeed",
                    "Committing": "Committing",
                    "CommitFinalize": "CommitFinalize",
                    "CommitFinalizeFailed": "CommitFinalizeFailed",
                    "SubmitCommit": "SubmitCommit",
                    "CommitWait": "CommitWait",
                    "SubmitCommitAggregate": "SubmitCommitAggregate",
                    "CommitAggregateWait": "CommitAggregateWait",
                    "FinalizeSector": "FinalizeSector",
                    "Proving": "Proving",
                    "Available": "Available",
                    "FailedUnrecoverable": "FailedUnrecoverable",
                    "SealPreCommit1Failed": "SealPreCommit1Failed",
                    "SealPreCommit2Failed": "SealPreCommit2Failed",
                    "PreCommitFailed": "PreCommitFailed",
                    "ComputeProofFailed": "ComputeProofFailed",
                    "RemoteCommitFailed": "RemoteCommitFailed",
                    "CommitFailed": "CommitFailed",
                    "PackingFailed": "PackingFailed",
                    "FinalizeFailed": "FinalizeFailed",
                    "DealsExpired": "DealsExpired",
                    "RecoverDealIDs": "RecoverDealIDs",
                    "Faulty": "Faulty",
                    "FaultReported": "FaultReported",
                    "FaultedFinal": "FaultedFinal",
                    "Terminating": "Terminating",
                    "TerminateWait": "TerminateWait",
                    "TerminateFinality": "TerminateFinality",
                    "TerminateFailed": "TerminateFailed",
                    "Removing": "Removing",
                    "RemoveFailed": "RemoveFailed",
                    "Removed": "Removed",
                    "SnapDealsWaitDeals": "SnapDealsWaitDeals",
                    "SnapDealsAddPiece": "SnapDealsAddPiece",
                    "SnapDealsPacking": "SnapDealsPacking",
                    "UpdateReplica": "UpdateReplica",
                    "ProveReplicaUpdate": "ProveReplicaUpdate",
                    "SubmitReplicaUpdate": "SubmitReplicaUpdate",
                    "WaitMutable": "WaitMutable",
                    "ReplicaUpdateWait": "ReplicaUpdateWait",
                    "UpdateActivating": "UpdateActivating",
                    "ReleaseSectorKey": "ReleaseSectorKey",
                    "FinalizeReplicaUpdate": "FinalizeReplicaUpdate",
                    "SnapDealsAddPieceFailed": "SnapDealsAddPieceFailed",
                    "SnapDealsDealsExpired": "SnapDealsDealsExpired",
                    "SnapDealsRecoverDealIDs": "SnapDealsRecoverDealIDs",
                    "ReplicaUpdateFailed": "ReplicaUpdateFailed",
                    "ReleaseSectorKeyFailed": "ReleaseSectorKeyFailed",
                    "FinalizeReplicaUpdateFailed": "FinalizeReplicaUpdateFailed",
                    "AbortUpgrade": "AbortUpgrade",
                    "ReceiveSector": "ReceiveSector"
                }
            },
            "additionalFields": {
                "title": "Other fields",
                "tooltip": "Additional fields",
                "values": {
                    "ReceivedOn": "Received on (time)"
                }
            }
        }
    },
    "error": {
        "isAcceptanceLogicNotExistingOrNotAllowed": "The storage acceptance logic you ask doesn't exist or you are not allowed to perform this operation"
    },
    "button": {
        "backToAcceptanceLogicList": "Go back to storage acceptance logic list"
    },
    "validation": {
        "name": {
            "required": "Acceptance logic name is mandatory",
            "matches": "Can only contain letters, numbers and underscore",
            "alreadyUsed": "Acceptance logic name already used, it must be unique for all your logics"
        },
        "builder": {
            "invalid": "Invalid acceptance logic, check all rules for more details",
            "positiveNumberOnly": "You can use positive number only",
            "integerOnly": "Only integer can be used"
        },
        "onCreateAcceptanceLogic": "Unable to create the acceptance logic. Try later or reach out to CIDgravity team",
        "onUpdateAcceptanceLogic": "Unable to update the acceptance logic. Try later or reach out to CIDgravity team"
    },
    "notification": {
        "success": {
            "onCreateDefaultAcceptanceLogic": "Default acceptance logic successfully created",
            "onCreateAcceptanceLogic": "Acceptance logic successfully created",
            "onUpdateAcceptanceLogic": "Acceptance logic successfully updated"
        },
        "error": {
            "generic": "Unable to create/update the acceptance logic. Try later or reach out to CIDgravity team"
        }
    }
}
